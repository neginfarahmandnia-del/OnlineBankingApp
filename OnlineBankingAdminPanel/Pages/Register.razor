@page "/register"
@inject NavigationManager Navigation
@inject ILogger<Register> Logger
@inject IAuthService AuthService
@using OnlineBankingAdminPanel.Models.Auth
@using OnlineBankingAdminPanel.Services
<h3>📝 Registrieren</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="RegisterModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Benutzername</label>
        <InputText id="username" class="form-control" @bind-Value="RegisterModel.UserName" />
    </div>

    <div class="mb-3">
        <label for="email" class="form-label">E-Mail</label>
        <InputText id="email" class="form-control" @bind-Value="RegisterModel.Email" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Passwort</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword" class="form-label">Passwort bestätigen</label>
        <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="RegisterModel.ConfirmPassword" />
    </div>

    <button type="submit" class="btn btn-success">Registrieren</button>
</EditForm>

@code {
    private RegisterRequest RegisterModel = new();
    private string? ErrorMessage;

    private async Task HandleRegister()
    {
        ErrorMessage = null;

        try
        {
            var result = await AuthService.RegisterAsync(RegisterModel);

            if (result.Success)
            {
                Navigation.NavigateTo("/login");
            }
            else
            {
                ErrorMessage = result.ErrorMessage ?? "Registrierung fehlgeschlagen.";
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Fehler bei Registrierung");
            ErrorMessage = ex.Message;
        }
    }
}
