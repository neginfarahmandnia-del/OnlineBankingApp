@page "/bankkonto"
@inject IHttpClientFactory HttpClientFactory
@using System.Net.Http.Json
@using System.Text.Json
@using OnlineBankingApp.Application.Dtos.BankAccounts

<h3>Neues Bankkonto eröffnen</h3>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">@successMessage</div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="@bankkonto" OnValidSubmit="Speichern">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">IBAN:</label>
        <InputText class="form-control" @bind-Value="bankkonto.IBAN" />
    </div>

    <div class="mb-3">
        <label class="form-label">Kontoname:</label>
        <InputText class="form-control" @bind-Value="bankkonto.Name" />
    </div>

    <div class="mb-3">
        <label class="form-label">Kontoinhaber:</label>
        <InputText class="form-control" @bind-Value="bankkonto.AccountHolder" />
    </div>

    <div class="mb-3">
        <label class="form-label">Warnlimit:</label>
        <InputNumber class="form-control" @bind-Value="bankkonto.WarnLimit" />
    </div>
    <div class="mb-3">
        <label>Kontotyp:</label>
        <InputSelect class="form-control" @bind-Value="bankkonto.Kontotyp">
            <option value="">Bitte auswählen</option>
            <option value="Girokonto">Girokonto</option>
            <option value="Sparkonto">Sparkonto</option>
            <option value="Kreditkonto">Kreditkonto</option>
        </InputSelect>
    </div>

    <div class="mb-3">
        <label>Abteilung:</label>
        <InputSelect class="form-control" @bind-Value="bankkonto.Abteilung">
            <option value="">Bitte auswählen</option>
            <option value="Privatkunden">Privatkunden</option>
            <option value="Geschäftskunden">Geschäftskunden</option>
            <option value="Firmenkunden">Firmenkunden</option>
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Speichern</button>
</EditForm>

@code {
    private CreateBankAccountDto bankkonto = new();
    private string? successMessage;
    private string? errorMessage;

    private async Task Speichern()
    {
        successMessage = null;
        errorMessage = null;

        Console.WriteLine($"[DEBUG] Sende an API: {JsonSerializer.Serialize(bankkonto)}");

        try
        {
            var client = HttpClientFactory.CreateClient("ApiClient");

            // wichtig: Endpoint genau wie im Controller
            var response = await client.PostAsJsonAsync("api/BankAccounts", bankkonto);

            Console.WriteLine($"[DEBUG] API Antwort: {response.StatusCode}");

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Konto erfolgreich erstellt.";
                bankkonto = new(); // Formular zurücksetzen
            }
            else
            {
                var content = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"[DEBUG] API Fehler: {content}");
                errorMessage = $"Fehler beim Speichern: {content}";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"[DEBUG] Ausnahme: {ex}");
            errorMessage = $"Unerwarteter Fehler: {ex.Message}";
        }
    }
}
